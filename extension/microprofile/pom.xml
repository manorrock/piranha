<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>cloud.piranha.extension</groupId>
        <artifactId>project</artifactId>
        <version>21.2.0-SNAPSHOT</version>
    </parent>

    <artifactId>piranha-extension-microprofile</artifactId>
    <packaging>jar</packaging>

    <name>Piranha Extension - MicroProfile</name>

    <dependencies>
        <!-- Jakarta Expression Language -->
        <dependency>
            <groupId>org.glassfish</groupId>
            <artifactId>jakarta.el</artifactId>
            <scope>runtime</scope>
        </dependency>

        <!-- Jakarta JSON Binding -->
        <dependency>
            <groupId>jakarta.json.bind</groupId>
            <artifactId>jakarta.json.bind-api</artifactId>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>org.eclipse</groupId>
            <artifactId>yasson</artifactId>
            <scope>runtime</scope>
        </dependency>

        <!-- Jakarta JSON Processing -->
        <dependency>
            <groupId>jakarta.json</groupId>
            <artifactId>jakarta.json-api</artifactId>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>org.glassfish</groupId>
            <artifactId>jakarta.json</artifactId>
            <scope>runtime</scope>
        </dependency>

        <!-- MicroProfile JWT Auth -->
        <dependency>
            <groupId>org.eclipse.microprofile.jwt</groupId>
            <artifactId>microprofile-jwt-auth-api</artifactId>
            <scope>runtime</scope>
        </dependency>

        <!-- Piranha Micro-core -->
        <dependency>
            <groupId>cloud.piranha.extension</groupId>
            <artifactId>piranha-extension-micro-core</artifactId>
            <version>${project.version}</version>
            <scope>runtime</scope>
        </dependency>

        <!-- Piranha CDI - Weld Integration -->
        <dependency>
            <groupId>cloud.piranha.cdi</groupId>
            <artifactId>piranha-cdi-weld</artifactId>
            <version>${project.version}</version>
            <scope>compile</scope>
        </dependency>

        <!-- Piranha MicroProfile - OmniFaces JWT Integration -->
        <dependency>
            <groupId>cloud.piranha.microprofile.omnifaces</groupId>
            <artifactId>piranha-microprofile-omnifaces-jwt</artifactId>
            <version>${project.version}</version>
        </dependency>

        <!-- Piranha Naming -->
        <dependency>
            <groupId>cloud.piranha.naming</groupId>
            <artifactId>piranha-naming-impl</artifactId>
            <version>${project.version}</version>
            <scope>runtime</scope>
        </dependency>

        <!-- Jersey -->
        <dependency>
            <groupId>org.glassfish.jersey.containers</groupId>
            <artifactId>jersey-container-servlet</artifactId>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>org.glassfish.jersey.inject</groupId>
            <artifactId>jersey-hk2</artifactId>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>org.glassfish.jersey.ext.cdi</groupId>
            <artifactId>jersey-cdi1x</artifactId>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>org.glassfish.jersey.media</groupId>
            <artifactId>jersey-media-json-processing</artifactId>
            <scope>runtime</scope>
        </dependency>

        <!-- Jakarta Security -->
        <dependency>
            <groupId>cloud.piranha.security</groupId>
            <artifactId>piranha-security-jakarta</artifactId>
            <version>${project.version}</version>
            <scope>compile</scope>
        </dependency>

        <!-- Piranha Security - Soteria integration -->
        <dependency>
            <groupId>cloud.piranha.security</groupId>
            <artifactId>piranha-security-soteria</artifactId>
            <version>${project.version}</version>
            <scope>runtime</scope>
        </dependency>

        <!-- Piranha Webapplication API -->
        <dependency>
            <groupId>cloud.piranha.webapp</groupId>
            <artifactId>piranha-webapp-api</artifactId>
            <version>${project.version}</version>
            <scope>provided</scope>
        </dependency>

        <!-- Piranha Webapplication - web.xml support -->
        <dependency>
            <groupId>cloud.piranha.webapp</groupId>
            <artifactId>piranha-webapp-webxml</artifactId>
            <version>${project.version}</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-api</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-params</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>cloud.piranha.webapp</groupId>
            <artifactId>piranha-webapp-scinitializer</artifactId>
            <version>${project.version}</version>
            <scope>compile</scope>
        </dependency>
    </dependencies>
</project>
